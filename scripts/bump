#!/usr/bin/env python
import subprocess
import click
from versionpy import COMPONENT_NAMES, get_component_ind, increment_version


def validate_version(ctx, param, value):
    if '.' in value:
        if len(value.split('.')) < 2 or len(value.split('.')) > 3:
            raise click.BadParameter(f'Version must have 3 components. Got: {value}')
    else:
        if get_component_ind(value) is None:
            raise click.BadParameter(f'Parameter must be either a 2 or 3 component version tag, '
                                     f'or one of {", ".join(v[-1] for v in COMPONENT_NAMES.values())}')
    return value


@click.command()
@click.argument('new_version', default='BUGFIX', callback=validate_version)
@click.option('-p', 'package_name')
def main(new_version, package_name=None):
    """ Usage: bump [bugfix,minor,major,1.0.1] [-p package_name]
    """
    version_file, new_version = increment_version(new_version, package_name)
    run_cmdl(f'git add {version_file}')
    run_cmdl(f'git commit -m "Bump {new_version}"')
    run_cmdl(f'git tag {new_version}')
    run_cmdl(f'git push --tags')


def run_cmdl(_cmd):
    print('$ ' + _cmd)
    subprocess.run(_cmd, shell=True, check=True)


if __name__ == '__main__':
    main()
