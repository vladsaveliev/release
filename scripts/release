#!/usr/bin/env python
import subprocess
import click
from release import VERSION_COMPONENTS, increment_version


def validate_version(ctx, param, value):
    if '.' in value:
        if len(value.split('.')) != 3:
            raise click.BadParameter(f'Version must have 3 components. Got: {value}')
    else:
        value = value.upper()
        if value not in VERSION_COMPONENTS:
            raise click.BadParameter(f'Parameter must be either a 3-component version tag, or one of {VERSION_COMPONENTS}')
    return value


@click.command()
@click.argument('new_version', default='BUGFIX', callback=validate_version)
@click.option('-p', 'package_name')
def main(new_version, package_name=None):
    """ Usage: release [bugfix,minor,major,1.0.1] [-p package_name]
    """
    version_file, new_version = increment_version(new_version, package_name)
    run_cmdl(f'git add {version_file}')
    run_cmdl(f'git commit -m "Bump {new_version}"')
    run_cmdl(f'git tag {new_version}')
    run_cmdl(f'git push origin --tags')  # pushes both commits and tags


def run_cmdl(_cmd):
    print('$ ' + _cmd)
    subprocess.run(_cmd, shell=True, check=True)


if __name__ == '__main__':
    main()
